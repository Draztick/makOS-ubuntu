#!/bin/bash
# Written by Draztick

########  Update Section  ##############

echo "[*] Updating repositories..."

{
  apt update 2>/dev/null 
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then
  echo "[+] Repositories updated successfully."
else
  echo "[-] Repositories failed to update."
fi

echo "[*] Updating packages..."

{
  apt upgrade -y 2>/dev/null
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then
  echo "[+] Packages upgraded successfully."
else
  echo "[-] Packages failed to upgrade."
fi

########  In-repo installs  ###############

## Utilities ##

echo "[*] Installing utility tools (vim, curl, etc.)..."

{
  apt install -y curl vim golang-go 2>&1>/dev/null
} 2>&1 > /dev/null 

if [ $? -eq 0 ]; then
  echo "[+] Utility tools installed successfully."
else
  echo "[-] One or more utility tools failed to install."
fi

echo "[*] Installing golang..."

{
  wget -q --show-progress https://golang.org/dl/go1.21.6.linux-amd64.tar.gz && tar -xvf go1.21.x.linux-amd64.tar.gz -C /usr/local && echo "\n\nexport PATH=$PATH:/usr/local/go/bin" >> ~/.bashrc
}

if [ $? -eq 0 ]; then
  echo "[+] Golang set up successfully."
else
  echo "[-] Golang failed to set up and must be installed manually."
fi

## Recon and Information Gathering ##

echo "[*] Installing Wireshark..."

export DEBIAN_FRONTEND=noninteractive

{
  apt install -yq wireshark 2>/dev/null
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then
  echo "[+] Wireshark installed successfully"
  dpkg-reconfigure wireshark
else
  echo "[-] Wireshark failed to install."
fi

## Scanning Tools ##

echo "[*] Installing Nmap..."

{ 
  apt install -y nmap 2>/dev/null
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then
  echo "[+] Nmap installed successfully."
else
  echo "[-] Nmap failed to install."
fi

echo "[*] Installing Nuclei by ProjectDiscovery..."

{ 
  go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest 2>/dev/null
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then
  echo "[+] Nmap installed successfully."
else
  echo "[-] Nmap failed to install."
fi

## Wireless Tools ##

echo "[*] Installing Aircrack-Ng..."

{ 
  apt install -y aircrack-ng 2>/dev/null
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then
  echo "[+] Aircrack-ng installed successfully."
else
  echo "[-] Aircrack-ng failed to install."
fi

## Reverse Engineering Tools

echo "[*] Installing Binwalk..."

{ 
  apt install -y binwalk 2>/dev/null
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then
  echo "[+] Binwalk installed successfully."
else
  echo "[-] Binwalk failed to install."
fi

###### Make required directories #########

if [ -d /opt/ghidra ]; then
  echo "[-] Ghidra directory already exists."
else
  mkdir /opt/ghidra
  if [ $? -eq 0 ]; then
    echo "[+] Ghidra directory created."
  else
    echo "[-] Ghidra directory creation failed."
  fi
fi

if [ -d /opt/nessus ]; then
  echo "[-] Nessus directory already exists."
else
  mkdir /opt/nessus
  if [ $? -eq 0 ]; then
    echo "[+] Nessus directory created."
  else
    echo "[-] Nessus directory created failed."
  fi
fi

###### Manual Installations ###########

echo "[*] Installing Metasploit Framework..."

{
  curl -s https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && chmod +x ./msfinstall && ./msfinstall 2>&1>/dev/null
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then 
  echo "[+] Metasploit installed successfully."
  rm ./msfinstall
else
  echo "[-] Metasploit failed to install. Retrying with verbose output..."
  ./msfinstall

  if [ $? -eq 0 ]; then 
    echo "[+] Metasploit installed successfully."
    rm ./msfinstall
  else
    echo "[-] Metasploit failed to install again. Leaving msfinstall file for troubleshooting."
    rm ./msfinstall
  fi
fi

echo "[*] Installing Bruno..."

{
  wget -q --show-progress https://github.com/usebruno/bruno/releases/download/v1.28.0/bruno_1.28.0_amd64_linux.deb -O bruno_1.28.0_amd64_linux.deb && apt install -y ./bruno_1.28.0_amd64_linux.deb 2>&1 > /dev/null 
} 2>&1 > /dev/null

if [ $? -eq 0 ]; then
  echo "[+] Bruno successfully installed"
else
  echo "[-] Bruno failed to install."
fi


